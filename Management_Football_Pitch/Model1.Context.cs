//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Management_Football_Pitch
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Management_FootballPitchEntities : DbContext
    {
        public Management_FootballPitchEntities()
            : base("name=Management_FootballPitchEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Deposit_Invoice> Deposit_Invoice { get; set; }
        public virtual DbSet<Football_Pitch> Football_Pitch { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<Pitch_Booked> Pitch_Booked { get; set; }
        public virtual DbSet<Type_Time_Slot> Type_Time_Slot { get; set; }
        public virtual DbSet<User_Info> User_Info { get; set; }
        public virtual DbSet<Cancel_Pitch> Cancel_Pitch { get; set; }
    
        public virtual ObjectResult<Nullable<int>> CheckEmptyPitch(Nullable<System.TimeSpan> time_start, Nullable<System.TimeSpan> time_end, Nullable<System.DateTime> date_use, string name_pitch)
        {
            var time_startParameter = time_start.HasValue ?
                new ObjectParameter("time_start", time_start) :
                new ObjectParameter("time_start", typeof(System.TimeSpan));
    
            var time_endParameter = time_end.HasValue ?
                new ObjectParameter("time_end", time_end) :
                new ObjectParameter("time_end", typeof(System.TimeSpan));
    
            var date_useParameter = date_use.HasValue ?
                new ObjectParameter("date_use", date_use) :
                new ObjectParameter("date_use", typeof(System.DateTime));
    
            var name_pitchParameter = name_pitch != null ?
                new ObjectParameter("name_pitch", name_pitch) :
                new ObjectParameter("name_pitch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckEmptyPitch", time_startParameter, time_endParameter, date_useParameter, name_pitchParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckEmptyPitch1(string time_start, string time_end, Nullable<System.DateTime> date_use, string name_pitch)
        {
            var time_startParameter = time_start != null ?
                new ObjectParameter("time_start", time_start) :
                new ObjectParameter("time_start", typeof(string));
    
            var time_endParameter = time_end != null ?
                new ObjectParameter("time_end", time_end) :
                new ObjectParameter("time_end", typeof(string));
    
            var date_useParameter = date_use.HasValue ?
                new ObjectParameter("date_use", date_use) :
                new ObjectParameter("date_use", typeof(System.DateTime));
    
            var name_pitchParameter = name_pitch != null ?
                new ObjectParameter("name_pitch", name_pitch) :
                new ObjectParameter("name_pitch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckEmptyPitch1", time_startParameter, time_endParameter, date_useParameter, name_pitchParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckEmptyPitch2(string time_start, string time_end, Nullable<System.DateTime> date_use, string name_pitch)
        {
            var time_startParameter = time_start != null ?
                new ObjectParameter("time_start", time_start) :
                new ObjectParameter("time_start", typeof(string));
    
            var time_endParameter = time_end != null ?
                new ObjectParameter("time_end", time_end) :
                new ObjectParameter("time_end", typeof(string));
    
            var date_useParameter = date_use.HasValue ?
                new ObjectParameter("date_use", date_use) :
                new ObjectParameter("date_use", typeof(System.DateTime));
    
            var name_pitchParameter = name_pitch != null ?
                new ObjectParameter("name_pitch", name_pitch) :
                new ObjectParameter("name_pitch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckEmptyPitch2", time_startParameter, time_endParameter, date_useParameter, name_pitchParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckEmptyFootballPitch(string time_start, string time_end, Nullable<System.DateTime> date_use, string name_pitch)
        {
            var time_startParameter = time_start != null ?
                new ObjectParameter("time_start", time_start) :
                new ObjectParameter("time_start", typeof(string));
    
            var time_endParameter = time_end != null ?
                new ObjectParameter("time_end", time_end) :
                new ObjectParameter("time_end", typeof(string));
    
            var date_useParameter = date_use.HasValue ?
                new ObjectParameter("date_use", date_use) :
                new ObjectParameter("date_use", typeof(System.DateTime));
    
            var name_pitchParameter = name_pitch != null ?
                new ObjectParameter("name_pitch", name_pitch) :
                new ObjectParameter("name_pitch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckEmptyFootballPitch", time_startParameter, time_endParameter, date_useParameter, name_pitchParameter);
        }
    
        public virtual ObjectResult<GetRevenueByCurrentDay_Result> GetRevenueByCurrentDay()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRevenueByCurrentDay_Result>("GetRevenueByCurrentDay");
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetRevenueNow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetRevenueNow");
        }
    
        public virtual ObjectResult<GetSlotTimeBookedIn7Day_Result> GetSlotTimeBookedIn7Day()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSlotTimeBookedIn7Day_Result>("GetSlotTimeBookedIn7Day");
        }
    
        public virtual ObjectResult<GetTimeSlotBookedIn7Day_Result> GetTimeSlotBookedIn7Day()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimeSlotBookedIn7Day_Result>("GetTimeSlotBookedIn7Day");
        }
    
        public virtual ObjectResult<GetSumTimeBooked_Result> GetSumTimeBooked(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSumTimeBooked_Result>("GetSumTimeBooked", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetTimeSlotBooked_Result> GetTimeSlotBooked(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimeSlotBooked_Result>("GetTimeSlotBooked", startDateParameter, endDateParameter);
        }
    }
}
